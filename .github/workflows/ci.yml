
name: ci

# Circle
# https://circleci.com/pricing/price-list/
# medium   2    4
# medium+  3    6
# large    4    8
# xlarge   8    16
# 2xlarge  16   32
# 2xlarge+ 20   40


## RUNNERS
# https://docs.github.com/en/actions/reference/runners/github-hosted-runners
# ubuntu-24.04 = 4cpu, 16GB
# ubuntu-latest-128= 32, 128GB
# windows-2025 = 4 cpu, 16GB
# ubuntu-24.04-arm = 4cpu, 16GB
# macos-13 = 4cpu, 14GB
# macos-15 = 3cpu(M1), 7GB
# gha-runner-scale-set-ubuntu-22.04-amd64-med   = 4 , 16G 
# gha-runner-scale-set-ubuntu-22.04-amd64-large = 8 , 32G 
# gha-runner-scale-set-ubuntu-22.04-amd64-xl = 16 , 64G 
# gha-runner-scale-set-ubuntu-22.04-amd64-xxl = 32 , 128G 


on:
  push:
    branches: [ gha ]
  workflow_dispatch:

env:
  JAVA_TOOL_OPTIONS: -Xmx4096m
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=4 -Xmx4096m

jobs:

  # spotless:
  #   # circle small            = 2m10s
  #   # gha ubuntu-24.04 4/16   = 2m
  #   runs-on: ubuntu-24.04
  #   environment: dev
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v5
  #       with:
  #         submodules: 'recursive'

  #     - name: Prepare
  #       uses: ./.github/actions/prepare

  #     - name: Spotless
  #       run: |
  #         ./gradlew spotlessCheck

  # moduleChecks:
  #   # circle small            = 1m10s
  #   # gha ubuntu-24.04 4/16   = 1m20s
  #   runs-on: ubuntu-24.04
  #   environment: dev
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v5
  #       with:
  #         submodules: 'recursive'

  #     - name: Prepare
  #       uses: ./.github/actions/prepare

  #     - name: Check modules
  #       run: |
  #         ./gradlew checkMavenCoordinateCollisions checkModuleDependencies

  # windowsBuild:
  #   needs: [spotless, moduleChecks ]
  #   # circle xlarge  8/32    = 13m10s
  #   # gha windows-2025 4/16  = 21m     
  #   runs-on: windows-2022
  #   environment: dev
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v5
  #       with:
  #         submodules: 'recursive'

  #     - name: Prepare
  #       uses: ./.github/actions/prepare

  #     - name: Build
  #       shell: powershell
  #       run: |
  #         $Env:JAVA_TOOL_OPTIONS = "-Xmx2g"
  #         $Env:GRADLE_OPTS = "-Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.vfs.watch=false"
  #         cmd.exe /c gradlew.bat --no-daemon --parallel --build-cache
      
  #     - name: Build
  #       shell: powershell
  #       run: |
  #         New-Item -ItemType Directory -Force build\test-results
  #         Get-ChildItem -Recurse | Where-Object {$_.FullName -match "test-results\\.*\\.*.xml"} | Copy-Item -Destination build\test-results\

  #     - name: Publish Windows Test Results and Reports
  #       uses: actions/upload-artifact@v4
  #       if: always()
  #       with:
  #         if-no-files-found: ignore
  #         retention-days: 7
  #         path: |
  #           build/test-results/


  assemble:
    # circle large 4/16       = 7m30s
    # gha ubuntu-24.04 4/16   = 8m20s
    runs-on: ubuntu-24.04
    environment: dev
    outputs:
      workflow_run_id: ${{ steps.workflowdetails.outputs.id }}    
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: 'recursive'

      - name: get workflow_details
        id: workflowdetails
        shell: bash      
        run: |
          echo "id=${{ github.run_id }}" >> $GITHUB_OUTPUT
          echo "build_date=$(date --rfc-3339=date)" >> $GITHUB_OUTPUT
    
      - name: Prepare
        uses: ./.github/actions/prepare
            
      - name: Assemble
        run: |
          ./gradlew clean compileJava compileTestJava compileJmhJava compileIntegrationTestJava compileAcceptanceTestJava compilePropertyTestJava assemble

    # TODO: check why this is done
    #   - run:
    #       name: Prep Artifacts
    #       command: |
    #         mkdir /tmp/teku-distributions
    #         cp build/distributions/*.tar.gz /tmp/teku-distributions/

      - name: Upload workspace build
        uses: actions/upload-artifact@v4
        with:
          name: assemble-output
          path: |
            ./
            !./.git/**
          retention-days: 1

  unitTests:
    # circle large 4/16 PARALLEL      = 8m
    # gha ubuntu-latest-128 32/128    = 4m
    # gha-runner-scale-set-ubuntu-22.04-amd64-large  = 6m
    needs: assemble
    uses: ./.github/workflows/matrix-tests-template.yml
    with:
      assemble_output_run_id: ${{ github.run_id }}
      stage_name: Unit Tests
      stage_key: unit
      gradle_task: test
      src_pattern: "*/src/test/java/*"
      src_root: "src/test/java"
      runner: "gha-runner-scale-set-ubuntu-22.04-amd64-large"

  unitTestsReport:
    runs-on: ubuntu-latest
    needs: unitTests
    if: always()
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/junit-reports
        if: always()        
        with:
          stage_key: unit

  integrationTests:
    # circle large 4/16 PARALLEL      = 18m
    # gha ubuntu-latest-128 32/64     = 16m
    needs: assemble
    runs-on: ubuntu-latest-128
    environment: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: 'recursive'

      - name: Prepare
        uses: ./.github/actions/prepare

      - name: Download assemble-output
        uses: actions/download-artifact@v4
        with:
          name: assemble-output

      - name: Integration Tests
        run: |
          ./gradlew integrationTest

      - name: Test results 
        uses: ./.github/actions/test-results
        if: always()        
        with:
          stage_key: 'integration'

  propertyTests:
    # circle medium_plus_executor 4/16 PARALLEL = 30m
    # gha-runner-scale-set-ubuntu-22.04-amd64-large = 13m  8/64                           
    needs: assemble
    uses: ./.github/workflows/matrix-tests-template.yml
    with:
      assemble_output_run_id: ${{ github.run_id }}
      stage_name: Property Tests
      stage_key: property
      gradle_task: propertyTest
      src_pattern: "*/src/property-test/java/*"
      src_root: "src/property-test/java"
      runner: "gha-runner-scale-set-ubuntu-22.04-amd64-xl"

  propertyTestsReport:
    runs-on: ubuntu-latest
    needs: propertyTests
    if: always()
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/junit-reports
        if: always()        
        with:
          stage_key: property

  acceptanceTests:
    # circle large 4/16 PARALLEL        = 12m
    # gha ubuntu-latest-128 32/64  
    needs: assemble
    uses: ./.github/workflows/matrix-tests-template.yml    
    with:
      assemble_output_run_id: ${{ github.run_id }}
      stage_name: Acceptance Tests
      stage_key: acceptance
      gradle_task: acceptanceTest
      src_pattern: "*/src/acceptance-test/java/*"
      src_root: "src/acceptance-test/java"
      runner: "gha-runner-scale-set-ubuntu-22.04-amd64-xxl"

  acceptanceTestsReport:
    runs-on: ubuntu-latest
    needs: acceptanceTests
    if: always()
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/junit-reports
        if: always()        
        with:
          stage_key: acceptance


  # referenceTests:
  #   needs: assemble
  #   runs-on: ubuntu-latest-128
  #   environment: dev
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v5
  #       with:
  #         submodules: 'recursive'

  #     - name: Prepare
  #       uses: ./.github/actions/prepare

  #     - name: Download workspace build
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: workspace

  #     - name: Fetch Reference Tests
  #       run: |
  #         if [ ! -d "eth-reference-tests/src/referenceTest/resources/consensus-spec-tests/tests" ]
  #         then
  #           ./gradlew --no-daemon expandRefTests
  #         fi

  #     - name: Compile Reference Tests
  #       run: |
  #         ./gradlew --no-daemon --parallel compileReferenceTestJava

  #     - name: Reference Tests      
  #       run: |
  #         ./gradlew -x generateReferenceTestClasses -x processReferenceTestResources -x cleanReferenceTestClasses referenceTest

  #     - name: Test results 
  #       uses: ./.github/actions/testResults
  #       if: always()        
  #       with:
  #         suiteName: 'referenceTests'

  # ========== GLOBAL ROLL-UP ==========
  collatedTestsReport:
    runs-on: ubuntu-latest
    needs:
      - unitTests
      - propertyTests
      - acceptanceTests

    if: always()
    steps:
      - uses: actions/checkout@v5
      - uses: actions/download-artifact@v4
        with:
          path: reports
      - name: All Tests (Combined)
        uses: dorny/test-reporter@v1
        with:
          name: All Tests (Unit + Property + Integration + Acceptance)
          path: "reports/**/TEST-*.xml"
          reporter: java-junit