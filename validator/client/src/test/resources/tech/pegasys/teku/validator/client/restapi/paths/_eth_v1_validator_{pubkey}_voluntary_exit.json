{
  "post" : {
    "tags" : [ "Voluntary Exit" , "Experimental" ],
    "operationId" : "signVoluntaryExit",
    "summary" : "Sign Voluntary Exit",
    "description" : "Create a signed voluntary exit message for an active validator, identified by a public key known to the validator client. This endpoint returns a SignedVoluntaryExit object, which can be used to initiate voluntary exit via the beacon node's submitPoolVoluntaryExit endpoint.",
    "parameters" : [ {
      "name" : "pubkey",
      "required" : true,
      "in" : "path",
      "schema" : {
        "type" : "string",
        "pattern" : "^0x[a-fA-F0-9]{96}$",
        "example" : "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
      }
    }, {
      "name" : "epoch",
      "in" : "query",
      "schema" : {
        "type" : "string",
        "description" : "`uint64` Epoch number to query.",
        "example" : "1",
        "format" : "uint64"
      }
    } ],
    "security" : [ {
      "bearerAuth" : [ ]
    } ],
    "responses" : {
      "200" : {
        "description" : "Success response",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/SignedVoluntaryExitResponse"
            }
          }
        }
      },
      "404" : {
        "description" : "Not found",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "401" : {
        "description" : "Unauthorized, no token is found",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "403" : {
        "description" : "Forbidden, a token is found but is invalid",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "501" : {
        "description" : "Not implemented",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "400" : {
        "description" : "The request could not be processed, check the response for more information.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "500" : {
        "description" : "Internal server error",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      }
    }
  }
}