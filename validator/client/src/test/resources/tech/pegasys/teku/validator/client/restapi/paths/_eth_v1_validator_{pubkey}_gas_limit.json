{
  "get" : {
    "tags" : [ "Gas Limit" ],
    "operationId" : "GetGasLimit",
    "summary" : "Get Validator Gas Limit",
    "description" : "Get the execution gas limit for an individual validator. This gas limit is the one used by the validator when proposing blocks via an external builder. If no limit has been set explicitly for a key then the process-wide default will be returned.\nThe server may return a 400 status code if no external builder is configured.\nWARNING: The gas_limit is not used on Phase0 or Altair networks.",
    "parameters" : [ {
      "name" : "pubkey",
      "required" : true,
      "in" : "path",
      "schema" : {
        "type" : "string",
        "pattern" : "^0x[a-fA-F0-9]{96}$",
        "example" : "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
      }
    } ],
    "security" : [ {
      "bearerAuth" : [ ]
    } ],
    "responses" : {
      "200" : {
        "description" : "Success response",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "required" : [ "data" ],
              "properties" : {
                "data" : {
                  "$ref" : "#/components/schemas/GetGasLimitData"
                }
              }
            }
          }
        }
      },
      "401" : {
        "description" : "Unauthorized, no token is found",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "403" : {
        "description" : "Forbidden, a token is found but is invalid",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "404" : {
        "description" : "Not found",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "400" : {
        "description" : "The request could not be processed, check the response for more information.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "500" : {
        "description" : "Internal server error",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      }
    }
  },
  "post" : {
    "tags" : [ "Gas Limit" ],
    "operationId" : "SetGasLimit",
    "summary" : "Set validator gas limit",
    "description" : "Set the gas limit for an individual validator. This limit will be propagated to the beacon node for use on future block proposals.\nThe beacon node is responsible for informing external block builders of the change.\nThe server may return a 400 status code if no external builder is configured.\nWARNING: The gas_limit is not used on Phase0 or Altair networks.",
    "parameters" : [ {
      "name" : "pubkey",
      "required" : true,
      "in" : "path",
      "schema" : {
        "type" : "string",
        "pattern" : "^0x[a-fA-F0-9]{96}$",
        "example" : "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
      }
    } ],
    "requestBody" : {
      "content" : {
        "application/json" : {
          "schema" : {
            "$ref" : "#/components/schemas/SetGasLimitBody"
          }
        }
      }
    },
    "security" : [ {
      "bearerAuth" : [ ]
    } ],
    "responses" : {
      "202" : {
        "description" : "Success",
        "content" : { }
      },
      "503" : {
        "description" : "Unable to update gas limit at this time",
        "content" : { }
      },
      "401" : {
        "description" : "Unauthorized, no token is found",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "403" : {
        "description" : "Forbidden, a token is found but is invalid",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "404" : {
        "description" : "Not found",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "400" : {
        "description" : "The request could not be processed, check the response for more information.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "500" : {
        "description" : "Internal server error",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      }
    }
  },
  "delete" : {
    "tags" : [ "Gas Limit" ],
    "operationId" : "DeleteGasLimit",
    "summary" : "Delete configured gas limit",
    "description" : "Delete a configured gas limit for the specified public key.",
    "parameters" : [ {
      "name" : "pubkey",
      "required" : true,
      "in" : "path",
      "schema" : {
        "type" : "string",
        "pattern" : "^0x[a-fA-F0-9]{96}$",
        "example" : "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
      }
    } ],
    "security" : [ {
      "bearerAuth" : [ ]
    } ],
    "responses" : {
      "204" : {
        "description" : "Success",
        "content" : { }
      },
      "403" : {
        "description" : "Forbidden, a token is found but is invalid",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "401" : {
        "description" : "Unauthorized, no token is found",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "404" : {
        "description" : "Not found",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "400" : {
        "description" : "The request could not be processed, check the response for more information.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "500" : {
        "description" : "Internal server error",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      }
    }
  }
}