{
  "get" : {
    "tags" : [ "Fee Recipient" ],
    "operationId" : "GetFeeRecipient",
    "summary" : "Get validator fee recipient",
    "description" : "List the validator public key to eth address mapping for fee recipient feature on a specific public key. The validator public key will return with the default fee recipient address if a specific one was not found.\n\nWARNING: The fee_recipient is not used on Phase0 or Altair networks.",
    "parameters" : [ {
      "name" : "pubkey",
      "required" : true,
      "in" : "path",
      "schema" : {
        "type" : "string",
        "pattern" : "^0x[a-fA-F0-9]{96}$",
        "example" : "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
      }
    } ],
    "security" : [ {
      "bearerAuth" : [ ]
    } ],
    "responses" : {
      "200" : {
        "description" : "Success response",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "required" : [ "data" ],
              "properties" : {
                "data" : {
                  "$ref" : "#/components/schemas/GetFeeRecipientData"
                }
              }
            }
          }
        }
      },
      "401" : {
        "description" : "Unauthorized, no token is found",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "403" : {
        "description" : "Forbidden, a token is found but is invalid",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "404" : {
        "description" : "Not found",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "400" : {
        "description" : "The request could not be processed, check the response for more information.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "500" : {
        "description" : "Internal server error",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      }
    }
  },
  "post" : {
    "tags" : [ "Fee Recipient" ],
    "operationId" : "SetFeeRecipient",
    "summary" : "Set validator fee recipient",
    "description" : "Sets the validator client fee recipient mapping which will then update the beacon node. Existing mappings for the same validator public key will be overwritten.\n\nConfiguration file settings will take precedence over this API, so if your validator fee recipient configuration file contains this public key, it will need to be removed before attempting to update with this api. Cannot specify a fee recipient of 0x00 via the API.\n\nWARNING: The fee_recipient is not used on Phase0 or Altair networks.",
    "parameters" : [ {
      "name" : "pubkey",
      "required" : true,
      "in" : "path",
      "schema" : {
        "type" : "string",
        "pattern" : "^0x[a-fA-F0-9]{96}$",
        "example" : "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
      }
    } ],
    "requestBody" : {
      "content" : {
        "application/json" : {
          "schema" : {
            "$ref" : "#/components/schemas/SetFeeRecipientBody"
          }
        }
      }
    },
    "security" : [ {
      "bearerAuth" : [ ]
    } ],
    "responses" : {
      "202" : {
        "description" : "Success",
        "content" : { }
      },
      "503" : {
        "description" : "Unable to update fee recipient at this time",
        "content" : { }
      },
      "401" : {
        "description" : "Unauthorized, no token is found",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "403" : {
        "description" : "Forbidden, a token is found but is invalid",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "404" : {
        "description" : "Not found",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "400" : {
        "description" : "The request could not be processed, check the response for more information.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "500" : {
        "description" : "Internal server error",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      }
    }
  },
  "delete" : {
    "tags" : [ "Fee Recipient" ],
    "operationId" : "DeleteFeeRecipient",
    "summary" : "Delete configured fee recipient",
    "description" : "Delete a configured fee recipient mapping for the specified public key.",
    "parameters" : [ {
      "name" : "pubkey",
      "required" : true,
      "in" : "path",
      "schema" : {
        "type" : "string",
        "pattern" : "^0x[a-fA-F0-9]{96}$",
        "example" : "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
      }
    } ],
    "security" : [ {
      "bearerAuth" : [ ]
    } ],
    "responses" : {
      "204" : {
        "description" : "Success",
        "content" : { }
      },
      "403" : {
        "description" : "Forbidden, a token is found but is invalid",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "401" : {
        "description" : "Unauthorized, no token is found",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "404" : {
        "description" : "Not found",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "400" : {
        "description" : "The request could not be processed, check the response for more information.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "500" : {
        "description" : "Internal server error",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      }
    }
  }
}