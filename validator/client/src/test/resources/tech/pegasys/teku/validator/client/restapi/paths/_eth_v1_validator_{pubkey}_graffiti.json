{
  "delete" : {
    "tags" : [ "Graffiti" ],
    "operationId" : "deleteGraffiti",
    "summary" : "Delete Configured Graffiti",
    "description" : "Delete the configured graffiti for the specified public key.",
    "parameters" : [ {
      "name" : "pubkey",
      "required" : true,
      "in" : "path",
      "schema" : {
        "type" : "string",
        "pattern" : "^0x[a-fA-F0-9]{96}$",
        "example" : "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
      }
    } ],
    "security" : [ {
      "bearerAuth" : [ ]
    } ],
    "responses" : {
      "204" : {
        "description" : "Successfully removed the graffiti, or there was no graffiti set for the requested public key.",
        "content" : { }
      },
      "401" : {
        "description" : "Unauthorized, no token is found",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "403" : {
        "description" : "Forbidden, a token is found but is invalid",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "404" : {
        "description" : "Not found",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "501" : {
        "description" : "Not implemented",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "400" : {
        "description" : "The request could not be processed, check the response for more information.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "500" : {
        "description" : "Internal server error",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      }
    }
  }
}