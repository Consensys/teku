[node]
# networkMode options:
# "mock": use MockP2PNetwork
# "hobbits": use HobbitsP2PNetwork
# "mothra": use MothraP2PNetwork
networkMode = "mock"
#  Gossip options: floodsub,gossipsub,plumtree,none
gossipProtocol = "floodsub"
identity = "0x00"
timer="QuartzTimer"
networkInterface = "0.0.0.0"
port = 9000
discovery = "discv5"
bootnodes = ""
isBootnode = true
advertisedPort = 9000
naughtinessPercentage = 0

[interop]
active = false
# "file" reads validator creds from file
# "mocked" generated validator cred deterministically
mode = "mocked"
inputFile = "depositsAndKeys.yaml"
genesisTime = 1567777777
ownedValidatorStartIndex = 0
ownedValidatorCount = 4
startState = "/tmp/genesis.ssz"

[deposit]
# normal, test, simulation
# "test" pre-production
# "simulation" to run a simulation of deposits with ganache-cli, if a inputFile is included the file will replay the deposits
# "normal" production, must include contractAddr and nodeUrl
mode = "test"
inputFile = "validator_test_data.json"
numValidators = 16
numNodes = 1
contractAddr = "0x77f7bED277449F51505a4C54550B074030d989bC"
nodeUrl = "http://localhost:7545"

[output]
logPath = "."
logFile = "artemis.log"
outputFile = "artemis.json"
providerType = "JSON"
events = [ "TimeSeriesRecord", "Eth2Genesis", "Deposit" ]
formatted = false

[output.fields]
TimeSeriesRecord = ["date", "index", "slot", "epoch", "block_root", "block_body", "lastFinalizedBlockRoot", "lastFinalizedStateRoot", "block_parent_root", "validators_size", "validators", "lastJustifiedBlockRoot", "lastJustifiedStateRoot"]
Eth2Genesis = ["deposit_root", "deposit_count"]
Deposit = ["pubkey", "withdrawal_credentials", "proof_of_possession", "amount", "merkle_tree_index"]
DepositSimulation = ["secp", "bls", "deposit_data", "events"]

[metrics]
enabled = false
port = 8008
metricsNetworkInterface = "127.0.0.1"
#metricsCategories = [ "BEACONCHAIN", "JVM", "PROCESS" ]


# Modify constants in Constants.java
[constants]

# Minimal preset


# Misc
# ---------------------------------------------------------------

# [customized] Just 8 shards for testing purposes
SHARD_COUNT = 8
# [customized] unsecure, but fast
TARGET_COMMITTEE_SIZE = 4
# 2**12 (= 4,096)
MAX_VALIDATORS_PER_COMMITTEE = 4096
# 2**2 (= 4)
MIN_PER_EPOCH_CHURN_LIMIT = 4
# 2**16 (= 65,536)
CHURN_LIMIT_QUOTIENT = 65536
# [customized] Faster, but unsecure.
SHUFFLE_ROUND_COUNT = 10
# [customized]
MIN_GENESIS_ACTIVE_VALIDATOR_COUNT = 64
# Jan 3, 2020
MIN_GENESIS_TIME = 1578009600



# Deposit contract
# ---------------------------------------------------------------
# **TBD**
DEPOSIT_CONTRACT_ADDRESS = '0x1234567890123456789012345678901234567890'


# Gwei values
# ---------------------------------------------------------------
# 2**0 * 10**9 (= 1,000,000,000) Gwei
MIN_DEPOSIT_AMOUNT = 1000000000
# 2**5 * 10**9 (= 32,000,000,000) Gwei
MAX_EFFECTIVE_BALANCE = 32000000000
# 2**4 * 10**9 (= 16,000,000,000) Gwei
EJECTION_BALANCE = 16000000000
# 2**0 * 10**9 (= 1,000,000,000) Gwei
EFFECTIVE_BALANCE_INCREMENT = 1000000000


# Initial values
# ---------------------------------------------------------------
# 0, GENESIS_EPOCH is derived from this constant
GENESIS_SLOT = 0
BLS_WITHDRAWAL_PREFIX = '0x00'


# Time parameters
# ---------------------------------------------------------------
# 6 seconds
SECONDS_PER_SLOT = 6
# 2**0 (= 1) slots 6 seconds
MIN_ATTESTATION_INCLUSION_DELAY = 1
# [customized] fast epochs
SLOTS_PER_EPOCH = 8
# 2**0 (= 1) epochs
MIN_SEED_LOOKAHEAD = 1
# 2**2 (= 4) epochs
ACTIVATION_EXIT_DELAY = 4
# [customized] higher frequency new deposits from eth1 for testing
SLOTS_PER_ETH1_VOTING_PERIOD = 16
# [customized] smaller state
SLOTS_PER_HISTORICAL_ROOT = 64
# 2**8 (= 256) epochs
MIN_VALIDATOR_WITHDRAWABILITY_DELAY = 256
# 2**11 (= 2,048) epochs
PERSISTENT_COMMITTEE_PERIOD = 2048
# [customized] fast catchup crosslinks
MAX_EPOCHS_PER_CROSSLINK = 4
# 2**2 (= 4) epochs
MIN_EPOCHS_TO_INACTIVITY_PENALTY = 4
# [customized] 2**12 (= 4,096) epochs
EARLY_DERIVED_SECRET_PENALTY_MAX_FUTURE_EPOCHS = 4096


# State vector lengths
# ---------------------------------------------------------------
# [customized] smaller state
EPOCHS_PER_HISTORICAL_VECTOR = 64
# [customized] smaller state
EPOCHS_PER_SLASHINGS_VECTOR = 64
# 2**24 (= 16,777,216) historical roots
HISTORICAL_ROOTS_LIMIT = 16777216
# 2**40 (= 1,099,511,627,776) validator spots
VALIDATOR_REGISTRY_LIMIT = 1099511627776


# Reward and penalty quotients
# ---------------------------------------------------------------
# 2**6 (= 64)
BASE_REWARD_FACTOR = 64
# 2**9 (= 512)
WHISTLEBLOWER_REWARD_QUOTIENT = 512
# 2**3 (= 8)
PROPOSER_REWARD_QUOTIENT = 8
# 2**25 (= 33,554,432)
INACTIVITY_PENALTY_QUOTIENT = 33554432
# 2**5 (= 32)
MIN_SLASHING_PENALTY_QUOTIENT = 32


# Max operations per block
# ---------------------------------------------------------------
# 2**4 (= 16)
MAX_PROPOSER_SLASHINGS = 16
# 2**0 (= 1)
MAX_ATTESTER_SLASHINGS = 1
# 2**7 (= 128)
MAX_ATTESTATIONS = 128
# 2**4 (= 16)
MAX_DEPOSITS = 16
# 2**4 (= 16)
MAX_VOLUNTARY_EXITS = 16
# Originally 2**4 (= 16), disabled for now.
MAX_TRANSFERS = 0


# Signature domains
# ---------------------------------------------------------------
DOMAIN_BEACON_PROPOSER = 0
DOMAIN_RANDAO = 1
DOMAIN_ATTESTATION = 2
DOMAIN_DEPOSIT = 3
DOMAIN_VOLUNTARY_EXIT = 4
DOMAIN_TRANSFER = 5