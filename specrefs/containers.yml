- name: AggregateAndProof
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/AggregateAndProof.java
  spec: |
    <spec container="AggregateAndProof" fork="phase0" hash="a218764f">
    class AggregateAndProof(Container):
        aggregator_index: ValidatorIndex
        aggregate: Attestation
        selection_proof: BLSSignature
    </spec>
    <spec container="AggregateAndProof" fork="electra" hash="a7f482d7">
    class AggregateAndProof(Container):
        aggregator_index: ValidatorIndex
        # [Modified in Electra:EIP7549]
        aggregate: Attestation
        selection_proof: BLSSignature
    </spec>

- name: AttestationPhase0
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/Attestation.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/AttestationSchema.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/versions/phase0/AttestationPhase0.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/versions/phase0/AttestationPhase0Schema.java
  spec: |
    <spec container="Attestation" fork="phase0" hash="5fc71dce">
    class Attestation(Container):
        aggregation_bits: Bitlist[MAX_VALIDATORS_PER_COMMITTEE]
        data: AttestationData
        signature: BLSSignature
    </spec>

- name: AttestationElectra
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/Attestation.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/AttestationSchema.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/versions/electra/AttestationElectra.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/versions/electra/AttestationElectraSchema.java
  spec: |
    <spec container="Attestation" fork="electra" hash="a27cddfb">
    class Attestation(Container):
        # [Modified in Electra:EIP7549]
        aggregation_bits: Bitlist[MAX_VALIDATORS_PER_COMMITTEE * MAX_COMMITTEES_PER_SLOT]
        data: AttestationData
        signature: BLSSignature
        # [New in Electra:EIP7549]
        committee_bits: Bitvector[MAX_COMMITTEES_PER_SLOT]
    </spec>

- name: AttestationData
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/AttestationData.java
  spec: |
    <spec container="AttestationData" fork="phase0" hash="854be491">
    class AttestationData(Container):
        slot: Slot
        index: CommitteeIndex
        beacon_block_root: Root
        source: Checkpoint
        target: Checkpoint
    </spec>

- name: AttesterSlashing
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/AttesterSlashing.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/AttesterSlashingSchema.java
  spec: |
    <spec container="AttesterSlashing" fork="phase0" hash="caf8a91a">
    class AttesterSlashing(Container):
        attestation_1: IndexedAttestation
        attestation_2: IndexedAttestation
    </spec>
    <spec container="AttesterSlashing" fork="electra" hash="2b9f773d">
    class AttesterSlashing(Container):
        # [Modified in Electra:EIP7549]
        attestation_1: IndexedAttestation
        # [Modified in Electra:EIP7549]
        attestation_2: IndexedAttestation
    </spec>

- name: BLSToExecutionChange
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/BlsToExecutionChange.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/BlsToExecutionChangeSchema.java
  spec: |
    <spec container="BLSToExecutionChange" fork="capella" hash="9271c356">
    class BLSToExecutionChange(Container):
        validator_index: ValidatorIndex
        from_bls_pubkey: BLSPubkey
        to_execution_address: ExecutionAddress
    </spec>

- name: BeaconBlock
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blocks/BeaconBlock.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blocks/BeaconBlockSchema.java
  spec: |
    <spec container="BeaconBlock" fork="phase0" hash="79909f0a">
    class BeaconBlock(Container):
        slot: Slot
        proposer_index: ValidatorIndex
        parent_root: Root
        state_root: Root
        body: BeaconBlockBody
    </spec>

- name: BeaconBlockBodyPhase0
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blocks/blockbody/versions/phase0/BeaconBlockBodyPhase0.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blocks/blockbody/versions/phase0/BeaconBlockBodyBuilderPhase0.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blocks/blockbody/versions/phase0/BeaconBlockBodySchemaPhase0.java
  spec: |
    <spec container="BeaconBlockBody" fork="phase0" hash="e982fea2">
    class BeaconBlockBody(Container):
        randao_reveal: BLSSignature
        eth1_data: Eth1Data
        graffiti: Bytes32
        proposer_slashings: List[ProposerSlashing, MAX_PROPOSER_SLASHINGS]
        attester_slashings: List[AttesterSlashing, MAX_ATTESTER_SLASHINGS]
        attestations: List[Attestation, MAX_ATTESTATIONS]
        deposits: List[Deposit, MAX_DEPOSITS]
        voluntary_exits: List[SignedVoluntaryExit, MAX_VOLUNTARY_EXITS]
    </spec>

- name: BeaconBlockBodyAltair
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blocks/blockbody/versions/altair/BeaconBlockBodyAltair.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blocks/blockbody/versions/altair/BeaconBlockBodyAltairImpl.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blocks/blockbody/versions/altair/BeaconBlockBodyBuilderAltair.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blocks/blockbody/versions/altair/BeaconBlockBodySchemaAltair.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blocks/blockbody/versions/altair/BeaconBlockBodySchemaAltairImpl.java
  spec: |
    <spec container="BeaconBlockBody" fork="altair" hash="4afb2e64">
    class BeaconBlockBody(Container):
        randao_reveal: BLSSignature
        eth1_data: Eth1Data
        graffiti: Bytes32
        proposer_slashings: List[ProposerSlashing, MAX_PROPOSER_SLASHINGS]
        attester_slashings: List[AttesterSlashing, MAX_ATTESTER_SLASHINGS]
        attestations: List[Attestation, MAX_ATTESTATIONS]
        deposits: List[Deposit, MAX_DEPOSITS]
        voluntary_exits: List[SignedVoluntaryExit, MAX_VOLUNTARY_EXITS]
        # [New in Altair]
        sync_aggregate: SyncAggregate
    </spec>

- name: BeaconBlockBodyBellatrix
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blocks/blockbody/versions/bellatrix/BeaconBlockBodyBellatrix.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blocks/blockbody/versions/bellatrix/BeaconBlockBodyBellatrixImpl.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blocks/blockbody/versions/bellatrix/BeaconBlockBodyBuilderBellatrix.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blocks/blockbody/versions/bellatrix/BeaconBlockBodySchemaBellatrix.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blocks/blockbody/versions/bellatrix/BeaconBlockBodySchemaBellatrixImpl.java
  spec: |
    <spec container="BeaconBlockBody" fork="bellatrix" hash="2ba73fc8">
    class BeaconBlockBody(Container):
        randao_reveal: BLSSignature
        eth1_data: Eth1Data
        graffiti: Bytes32
        proposer_slashings: List[ProposerSlashing, MAX_PROPOSER_SLASHINGS]
        attester_slashings: List[AttesterSlashing, MAX_ATTESTER_SLASHINGS]
        attestations: List[Attestation, MAX_ATTESTATIONS]
        deposits: List[Deposit, MAX_DEPOSITS]
        voluntary_exits: List[SignedVoluntaryExit, MAX_VOLUNTARY_EXITS]
        sync_aggregate: SyncAggregate
        # [New in Bellatrix]
        execution_payload: ExecutionPayload
    </spec>

- name: BeaconBlockBodyCapella
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blocks/blockbody/versions/capella/BeaconBlockBodyCapella.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blocks/blockbody/versions/capella/BeaconBlockBodyCapellaImpl.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blocks/blockbody/versions/capella/BeaconBlockBodyBuilderCapella.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blocks/blockbody/versions/capella/BeaconBlockBodySchemaCapella.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blocks/blockbody/versions/capella/BeaconBlockBodySchemaCapellaImpl.java
  spec: |
    <spec container="BeaconBlockBody" fork="capella" hash="3136f99b">
    class BeaconBlockBody(Container):
        randao_reveal: BLSSignature
        eth1_data: Eth1Data
        graffiti: Bytes32
        proposer_slashings: List[ProposerSlashing, MAX_PROPOSER_SLASHINGS]
        attester_slashings: List[AttesterSlashing, MAX_ATTESTER_SLASHINGS]
        attestations: List[Attestation, MAX_ATTESTATIONS]
        deposits: List[Deposit, MAX_DEPOSITS]
        voluntary_exits: List[SignedVoluntaryExit, MAX_VOLUNTARY_EXITS]
        sync_aggregate: SyncAggregate
        execution_payload: ExecutionPayload
        # [New in Capella]
        bls_to_execution_changes: List[SignedBLSToExecutionChange, MAX_BLS_TO_EXECUTION_CHANGES]
    </spec>

- name: BeaconBlockBodyDeneb
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blocks/blockbody/versions/deneb/BeaconBlockBodyDeneb.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blocks/blockbody/versions/deneb/BeaconBlockBodyDenebImpl.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blocks/blockbody/versions/deneb/BeaconBlockBodyBuilderDeneb.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blocks/blockbody/versions/deneb/BeaconBlockBodySchemaDeneb.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blocks/blockbody/versions/deneb/BeaconBlockBodySchemaDenebImpl.java
  spec: |
    <spec container="BeaconBlockBody" fork="deneb" hash="cf0c1053">
    class BeaconBlockBody(Container):
        randao_reveal: BLSSignature
        eth1_data: Eth1Data
        graffiti: Bytes32
        proposer_slashings: List[ProposerSlashing, MAX_PROPOSER_SLASHINGS]
        attester_slashings: List[AttesterSlashing, MAX_ATTESTER_SLASHINGS]
        attestations: List[Attestation, MAX_ATTESTATIONS]
        deposits: List[Deposit, MAX_DEPOSITS]
        voluntary_exits: List[SignedVoluntaryExit, MAX_VOLUNTARY_EXITS]
        sync_aggregate: SyncAggregate
        # [Modified in Deneb:EIP4844]
        execution_payload: ExecutionPayload
        bls_to_execution_changes: List[SignedBLSToExecutionChange, MAX_BLS_TO_EXECUTION_CHANGES]
        # [New in Deneb:EIP4844]
        blob_kzg_commitments: List[KZGCommitment, MAX_BLOB_COMMITMENTS_PER_BLOCK]
    </spec>

- name: BeaconBlockBodyElectra
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blocks/blockbody/versions/electra/BeaconBlockBodyElectra.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blocks/blockbody/versions/electra/BeaconBlockBodyElectraImpl.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blocks/blockbody/versions/electra/BeaconBlockBodyBuilderElectra.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blocks/blockbody/versions/electra/BeaconBlockBodySchemaElectra.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blocks/blockbody/versions/electra/BeaconBlockBodySchemaElectraImpl.java
  spec: |
    <spec container="BeaconBlockBody" fork="electra" hash="cd172b8c">
    class BeaconBlockBody(Container):
        randao_reveal: BLSSignature
        eth1_data: Eth1Data
        graffiti: Bytes32
        proposer_slashings: List[ProposerSlashing, MAX_PROPOSER_SLASHINGS]
        # [Modified in Electra:EIP7549]
        attester_slashings: List[AttesterSlashing, MAX_ATTESTER_SLASHINGS_ELECTRA]
        # [Modified in Electra:EIP7549]
        attestations: List[Attestation, MAX_ATTESTATIONS_ELECTRA]
        deposits: List[Deposit, MAX_DEPOSITS]
        voluntary_exits: List[SignedVoluntaryExit, MAX_VOLUNTARY_EXITS]
        sync_aggregate: SyncAggregate
        execution_payload: ExecutionPayload
        bls_to_execution_changes: List[SignedBLSToExecutionChange, MAX_BLS_TO_EXECUTION_CHANGES]
        blob_kzg_commitments: List[KZGCommitment, MAX_BLOB_COMMITMENTS_PER_BLOCK]
        # [New in Electra]
        execution_requests: ExecutionRequests
    </spec>

- name: BeaconBlockHeader
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blocks/BeaconBlockHeader.java
  spec: |
    <spec container="BeaconBlockHeader" fork="phase0" hash="0be4f2e7">
    class BeaconBlockHeader(Container):
        slot: Slot
        proposer_index: ValidatorIndex
        parent_root: Root
        state_root: Root
        body_root: Root
    </spec>

- name: BeaconStatePhase0
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/beaconstate/versions/phase0/BeaconStatePhase0.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/beaconstate/versions/phase0/BeaconStatePhase0Impl.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/beaconstate/versions/phase0/BeaconStateSchemaPhase0.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/beaconstate/versions/phase0/MutableBeaconStatePhase0.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/beaconstate/versions/phase0/MutableBeaconStatePhase0Impl.java
  spec: |
    <spec container="BeaconState" fork="phase0" hash="05beaa1c">
    class BeaconState(Container):
        genesis_time: uint64
        genesis_validators_root: Root
        slot: Slot
        fork: Fork
        latest_block_header: BeaconBlockHeader
        block_roots: Vector[Root, SLOTS_PER_HISTORICAL_ROOT]
        state_roots: Vector[Root, SLOTS_PER_HISTORICAL_ROOT]
        historical_roots: List[Root, HISTORICAL_ROOTS_LIMIT]
        eth1_data: Eth1Data
        eth1_data_votes: List[Eth1Data, EPOCHS_PER_ETH1_VOTING_PERIOD * SLOTS_PER_EPOCH]
        eth1_deposit_index: uint64
        validators: List[Validator, VALIDATOR_REGISTRY_LIMIT]
        balances: List[Gwei, VALIDATOR_REGISTRY_LIMIT]
        randao_mixes: Vector[Bytes32, EPOCHS_PER_HISTORICAL_VECTOR]
        slashings: Vector[Gwei, EPOCHS_PER_SLASHINGS_VECTOR]
        previous_epoch_attestations: List[PendingAttestation, MAX_ATTESTATIONS * SLOTS_PER_EPOCH]
        current_epoch_attestations: List[PendingAttestation, MAX_ATTESTATIONS * SLOTS_PER_EPOCH]
        justification_bits: Bitvector[JUSTIFICATION_BITS_LENGTH]
        previous_justified_checkpoint: Checkpoint
        current_justified_checkpoint: Checkpoint
        finalized_checkpoint: Checkpoint
    </spec>

- name: BeaconStateAltair
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/beaconstate/versions/altair/BeaconStateAltair.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/beaconstate/versions/altair/BeaconStateAltairImpl.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/beaconstate/versions/altair/BeaconStateSchemaAltair.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/beaconstate/versions/altair/MutableBeaconStateAltair.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/beaconstate/versions/altair/MutableBeaconStateAltairImpl.java
  spec: |
    <spec container="BeaconState" fork="altair" hash="8de7d5fb">
    class BeaconState(Container):
        genesis_time: uint64
        genesis_validators_root: Root
        slot: Slot
        fork: Fork
        latest_block_header: BeaconBlockHeader
        block_roots: Vector[Root, SLOTS_PER_HISTORICAL_ROOT]
        state_roots: Vector[Root, SLOTS_PER_HISTORICAL_ROOT]
        historical_roots: List[Root, HISTORICAL_ROOTS_LIMIT]
        eth1_data: Eth1Data
        eth1_data_votes: List[Eth1Data, EPOCHS_PER_ETH1_VOTING_PERIOD * SLOTS_PER_EPOCH]
        eth1_deposit_index: uint64
        validators: List[Validator, VALIDATOR_REGISTRY_LIMIT]
        balances: List[Gwei, VALIDATOR_REGISTRY_LIMIT]
        randao_mixes: Vector[Bytes32, EPOCHS_PER_HISTORICAL_VECTOR]
        slashings: Vector[Gwei, EPOCHS_PER_SLASHINGS_VECTOR]
        # [Modified in Altair]
        previous_epoch_participation: List[ParticipationFlags, VALIDATOR_REGISTRY_LIMIT]
        # [Modified in Altair]
        current_epoch_participation: List[ParticipationFlags, VALIDATOR_REGISTRY_LIMIT]
        justification_bits: Bitvector[JUSTIFICATION_BITS_LENGTH]
        previous_justified_checkpoint: Checkpoint
        current_justified_checkpoint: Checkpoint
        finalized_checkpoint: Checkpoint
        # [New in Altair]
        inactivity_scores: List[uint64, VALIDATOR_REGISTRY_LIMIT]
        # [New in Altair]
        current_sync_committee: SyncCommittee
        # [New in Altair]
        next_sync_committee: SyncCommittee
    </spec>

- name: BeaconStateBellatrix
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/beaconstate/versions/bellatrix/BeaconStateBellatrix.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/beaconstate/versions/bellatrix/BeaconStateBellatrixImpl.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/beaconstate/versions/bellatrix/BeaconStateSchemaBellatrix.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/beaconstate/versions/bellatrix/MutableBeaconStateBellatrix.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/beaconstate/versions/bellatrix/MutableBeaconStateBellatrixImpl.java
  spec: |
    <spec container="BeaconState" fork="bellatrix" hash="e5633a51">
    class BeaconState(Container):
        genesis_time: uint64
        genesis_validators_root: Root
        slot: Slot
        fork: Fork
        latest_block_header: BeaconBlockHeader
        block_roots: Vector[Root, SLOTS_PER_HISTORICAL_ROOT]
        state_roots: Vector[Root, SLOTS_PER_HISTORICAL_ROOT]
        historical_roots: List[Root, HISTORICAL_ROOTS_LIMIT]
        eth1_data: Eth1Data
        eth1_data_votes: List[Eth1Data, EPOCHS_PER_ETH1_VOTING_PERIOD * SLOTS_PER_EPOCH]
        eth1_deposit_index: uint64
        validators: List[Validator, VALIDATOR_REGISTRY_LIMIT]
        balances: List[Gwei, VALIDATOR_REGISTRY_LIMIT]
        randao_mixes: Vector[Bytes32, EPOCHS_PER_HISTORICAL_VECTOR]
        slashings: Vector[Gwei, EPOCHS_PER_SLASHINGS_VECTOR]
        previous_epoch_participation: List[ParticipationFlags, VALIDATOR_REGISTRY_LIMIT]
        current_epoch_participation: List[ParticipationFlags, VALIDATOR_REGISTRY_LIMIT]
        justification_bits: Bitvector[JUSTIFICATION_BITS_LENGTH]
        previous_justified_checkpoint: Checkpoint
        current_justified_checkpoint: Checkpoint
        finalized_checkpoint: Checkpoint
        inactivity_scores: List[uint64, VALIDATOR_REGISTRY_LIMIT]
        current_sync_committee: SyncCommittee
        next_sync_committee: SyncCommittee
        # [New in Bellatrix]
        latest_execution_payload_header: ExecutionPayloadHeader
    </spec>

- name: BeaconStateCapella
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/beaconstate/versions/capella/BeaconStateCapella.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/beaconstate/versions/capella/BeaconStateCapellaImpl.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/beaconstate/versions/capella/BeaconStateSchemaCapella.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/beaconstate/versions/capella/MutableBeaconStateCapella.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/beaconstate/versions/capella/MutableBeaconStateCapellaImpl.java
  spec: |
    <spec container="BeaconState" fork="capella" hash="245ba83b">
    class BeaconState(Container):
        genesis_time: uint64
        genesis_validators_root: Root
        slot: Slot
        fork: Fork
        latest_block_header: BeaconBlockHeader
        block_roots: Vector[Root, SLOTS_PER_HISTORICAL_ROOT]
        state_roots: Vector[Root, SLOTS_PER_HISTORICAL_ROOT]
        historical_roots: List[Root, HISTORICAL_ROOTS_LIMIT]
        eth1_data: Eth1Data
        eth1_data_votes: List[Eth1Data, EPOCHS_PER_ETH1_VOTING_PERIOD * SLOTS_PER_EPOCH]
        eth1_deposit_index: uint64
        validators: List[Validator, VALIDATOR_REGISTRY_LIMIT]
        balances: List[Gwei, VALIDATOR_REGISTRY_LIMIT]
        randao_mixes: Vector[Bytes32, EPOCHS_PER_HISTORICAL_VECTOR]
        slashings: Vector[Gwei, EPOCHS_PER_SLASHINGS_VECTOR]
        previous_epoch_participation: List[ParticipationFlags, VALIDATOR_REGISTRY_LIMIT]
        current_epoch_participation: List[ParticipationFlags, VALIDATOR_REGISTRY_LIMIT]
        justification_bits: Bitvector[JUSTIFICATION_BITS_LENGTH]
        previous_justified_checkpoint: Checkpoint
        current_justified_checkpoint: Checkpoint
        finalized_checkpoint: Checkpoint
        inactivity_scores: List[uint64, VALIDATOR_REGISTRY_LIMIT]
        current_sync_committee: SyncCommittee
        next_sync_committee: SyncCommittee
        # [Modified in Capella]
        latest_execution_payload_header: ExecutionPayloadHeader
        # [New in Capella]
        next_withdrawal_index: WithdrawalIndex
        # [New in Capella]
        next_withdrawal_validator_index: ValidatorIndex
        # [New in Capella]
        historical_summaries: List[HistoricalSummary, HISTORICAL_ROOTS_LIMIT]
    </spec>

- name: BeaconStateDeneb
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/beaconstate/versions/deneb/BeaconStateDeneb.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/beaconstate/versions/deneb/BeaconStateDenebImpl.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/beaconstate/versions/deneb/BeaconStateSchemaDeneb.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/beaconstate/versions/deneb/MutableBeaconStateDeneb.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/beaconstate/versions/deneb/MutableBeaconStateDenebImpl.java
  spec: |
    <spec container="BeaconState" fork="deneb" hash="32fd9dc4">
    class BeaconState(Container):
        genesis_time: uint64
        genesis_validators_root: Root
        slot: Slot
        fork: Fork
        latest_block_header: BeaconBlockHeader
        block_roots: Vector[Root, SLOTS_PER_HISTORICAL_ROOT]
        state_roots: Vector[Root, SLOTS_PER_HISTORICAL_ROOT]
        historical_roots: List[Root, HISTORICAL_ROOTS_LIMIT]
        eth1_data: Eth1Data
        eth1_data_votes: List[Eth1Data, EPOCHS_PER_ETH1_VOTING_PERIOD * SLOTS_PER_EPOCH]
        eth1_deposit_index: uint64
        validators: List[Validator, VALIDATOR_REGISTRY_LIMIT]
        balances: List[Gwei, VALIDATOR_REGISTRY_LIMIT]
        randao_mixes: Vector[Bytes32, EPOCHS_PER_HISTORICAL_VECTOR]
        slashings: Vector[Gwei, EPOCHS_PER_SLASHINGS_VECTOR]
        previous_epoch_participation: List[ParticipationFlags, VALIDATOR_REGISTRY_LIMIT]
        current_epoch_participation: List[ParticipationFlags, VALIDATOR_REGISTRY_LIMIT]
        justification_bits: Bitvector[JUSTIFICATION_BITS_LENGTH]
        previous_justified_checkpoint: Checkpoint
        current_justified_checkpoint: Checkpoint
        finalized_checkpoint: Checkpoint
        inactivity_scores: List[uint64, VALIDATOR_REGISTRY_LIMIT]
        current_sync_committee: SyncCommittee
        next_sync_committee: SyncCommittee
        # [Modified in Deneb:EIP4844]
        latest_execution_payload_header: ExecutionPayloadHeader
        next_withdrawal_index: WithdrawalIndex
        next_withdrawal_validator_index: ValidatorIndex
        historical_summaries: List[HistoricalSummary, HISTORICAL_ROOTS_LIMIT]
    </spec>

- name: BeaconStateElectra
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/beaconstate/versions/electra/BeaconStateElectra.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/beaconstate/versions/electra/BeaconStateElectraImpl.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/beaconstate/versions/electra/BeaconStateSchemaElectra.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/beaconstate/versions/electra/MutableBeaconStateElectra.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/beaconstate/versions/electra/MutableBeaconStateElectraImpl.java
  spec: |
    <spec container="BeaconState" fork="electra" hash="55e40daf">
    class BeaconState(Container):
        genesis_time: uint64
        genesis_validators_root: Root
        slot: Slot
        fork: Fork
        latest_block_header: BeaconBlockHeader
        block_roots: Vector[Root, SLOTS_PER_HISTORICAL_ROOT]
        state_roots: Vector[Root, SLOTS_PER_HISTORICAL_ROOT]
        historical_roots: List[Root, HISTORICAL_ROOTS_LIMIT]
        eth1_data: Eth1Data
        eth1_data_votes: List[Eth1Data, EPOCHS_PER_ETH1_VOTING_PERIOD * SLOTS_PER_EPOCH]
        eth1_deposit_index: uint64
        validators: List[Validator, VALIDATOR_REGISTRY_LIMIT]
        balances: List[Gwei, VALIDATOR_REGISTRY_LIMIT]
        randao_mixes: Vector[Bytes32, EPOCHS_PER_HISTORICAL_VECTOR]
        slashings: Vector[Gwei, EPOCHS_PER_SLASHINGS_VECTOR]
        previous_epoch_participation: List[ParticipationFlags, VALIDATOR_REGISTRY_LIMIT]
        current_epoch_participation: List[ParticipationFlags, VALIDATOR_REGISTRY_LIMIT]
        justification_bits: Bitvector[JUSTIFICATION_BITS_LENGTH]
        previous_justified_checkpoint: Checkpoint
        current_justified_checkpoint: Checkpoint
        finalized_checkpoint: Checkpoint
        inactivity_scores: List[uint64, VALIDATOR_REGISTRY_LIMIT]
        current_sync_committee: SyncCommittee
        next_sync_committee: SyncCommittee
        latest_execution_payload_header: ExecutionPayloadHeader
        next_withdrawal_index: WithdrawalIndex
        next_withdrawal_validator_index: ValidatorIndex
        historical_summaries: List[HistoricalSummary, HISTORICAL_ROOTS_LIMIT]
        # [New in Electra:EIP6110]
        deposit_requests_start_index: uint64
        # [New in Electra:EIP7251]
        deposit_balance_to_consume: Gwei
        # [New in Electra:EIP7251]
        exit_balance_to_consume: Gwei
        # [New in Electra:EIP7251]
        earliest_exit_epoch: Epoch
        # [New in Electra:EIP7251]
        consolidation_balance_to_consume: Gwei
        # [New in Electra:EIP7251]
        earliest_consolidation_epoch: Epoch
        # [New in Electra:EIP7251]
        pending_deposits: List[PendingDeposit, PENDING_DEPOSITS_LIMIT]
        # [New in Electra:EIP7251]
        pending_partial_withdrawals: List[PendingPartialWithdrawal, PENDING_PARTIAL_WITHDRAWALS_LIMIT]
        # [New in Electra:EIP7251]
        pending_consolidations: List[PendingConsolidation, PENDING_CONSOLIDATIONS_LIMIT]
    </spec>

- name: BeaconStateFulu
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/beaconstate/versions/fulu/BeaconStateFulu.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/beaconstate/versions/fulu/BeaconStateFuluImpl.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/beaconstate/versions/fulu/BeaconStateSchemaFulu.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/beaconstate/versions/fulu/MutableBeaconStateFulu.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/beaconstate/versions/fulu/MutableBeaconStateFuluImpl.java
  spec: |
    <spec container="BeaconState" fork="fulu" hash="0923b253">
    class BeaconState(Container):
        genesis_time: uint64
        genesis_validators_root: Root
        slot: Slot
        fork: Fork
        latest_block_header: BeaconBlockHeader
        block_roots: Vector[Root, SLOTS_PER_HISTORICAL_ROOT]
        state_roots: Vector[Root, SLOTS_PER_HISTORICAL_ROOT]
        historical_roots: List[Root, HISTORICAL_ROOTS_LIMIT]
        eth1_data: Eth1Data
        eth1_data_votes: List[Eth1Data, EPOCHS_PER_ETH1_VOTING_PERIOD * SLOTS_PER_EPOCH]
        eth1_deposit_index: uint64
        validators: List[Validator, VALIDATOR_REGISTRY_LIMIT]
        balances: List[Gwei, VALIDATOR_REGISTRY_LIMIT]
        randao_mixes: Vector[Bytes32, EPOCHS_PER_HISTORICAL_VECTOR]
        slashings: Vector[Gwei, EPOCHS_PER_SLASHINGS_VECTOR]
        previous_epoch_participation: List[ParticipationFlags, VALIDATOR_REGISTRY_LIMIT]
        current_epoch_participation: List[ParticipationFlags, VALIDATOR_REGISTRY_LIMIT]
        justification_bits: Bitvector[JUSTIFICATION_BITS_LENGTH]
        previous_justified_checkpoint: Checkpoint
        current_justified_checkpoint: Checkpoint
        finalized_checkpoint: Checkpoint
        inactivity_scores: List[uint64, VALIDATOR_REGISTRY_LIMIT]
        current_sync_committee: SyncCommittee
        next_sync_committee: SyncCommittee
        latest_execution_payload_header: ExecutionPayloadHeader
        next_withdrawal_index: WithdrawalIndex
        next_withdrawal_validator_index: ValidatorIndex
        historical_summaries: List[HistoricalSummary, HISTORICAL_ROOTS_LIMIT]
        deposit_requests_start_index: uint64
        deposit_balance_to_consume: Gwei
        exit_balance_to_consume: Gwei
        earliest_exit_epoch: Epoch
        consolidation_balance_to_consume: Gwei
        earliest_consolidation_epoch: Epoch
        pending_deposits: List[PendingDeposit, PENDING_DEPOSITS_LIMIT]
        pending_partial_withdrawals: List[PendingPartialWithdrawal, PENDING_PARTIAL_WITHDRAWALS_LIMIT]
        pending_consolidations: List[PendingConsolidation, PENDING_CONSOLIDATIONS_LIMIT]
        # [New in Fulu:EIP7917]
        proposer_lookahead: Vector[ValidatorIndex, (MIN_SEED_LOOKAHEAD + 1) * SLOTS_PER_EPOCH]
    </spec>

- name: BlobIdentifier
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/networking/libp2p/rpc/BlobIdentifier.java
  spec: |
    <spec container="BlobIdentifier" fork="deneb" hash="14d845de">
    class BlobIdentifier(Container):
        block_root: Root
        index: BlobIndex
    </spec>

- name: BlobSidecar
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blobs/versions/deneb/BlobSidecar.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blobs/versions/deneb/BlobSidecarSchema.java
  spec: |
    <spec container="BlobSidecar" fork="deneb" hash="b4f28e34">
    class BlobSidecar(Container):
        index: BlobIndex
        blob: Blob
        kzg_commitment: KZGCommitment
        kzg_proof: KZGProof
        signed_block_header: SignedBeaconBlockHeader
        kzg_commitment_inclusion_proof: Vector[Bytes32, KZG_COMMITMENT_INCLUSION_PROOF_DEPTH]
    </spec>

- name: Checkpoint
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/Checkpoint.java
  spec: |
    <spec container="Checkpoint" fork="phase0" hash="24947006">
    class Checkpoint(Container):
        epoch: Epoch
        root: Root
    </spec>

- name: ConsolidationRequest
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/execution/versions/electra/ConsolidationRequest.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/execution/versions/electra/ConsolidationRequestSchema.java
  spec: |
    <spec container="ConsolidationRequest" fork="electra" hash="269fdb77">
    class ConsolidationRequest(Container):
        source_address: ExecutionAddress
        source_pubkey: BLSPubkey
        target_pubkey: BLSPubkey
    </spec>

- name: ContributionAndProof
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/versions/altair/ContributionAndProof.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/versions/altair/ContributionAndProofSchema.java
  spec: |
    <spec container="ContributionAndProof" fork="altair" hash="f7a5150c">
    class ContributionAndProof(Container):
        aggregator_index: ValidatorIndex
        contribution: SyncCommitteeContribution
        selection_proof: BLSSignature
    </spec>

- name: DataColumnSidecar
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blobs/versions/fulu/DataColumnSidecar.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blobs/versions/fulu/DataColumnSidecarSchema.java
  spec: |
    <spec container="DataColumnSidecar" fork="fulu" hash="03586114">
    class DataColumnSidecar(Container):
        index: ColumnIndex
        column: List[Cell, MAX_BLOB_COMMITMENTS_PER_BLOCK]
        kzg_commitments: List[KZGCommitment, MAX_BLOB_COMMITMENTS_PER_BLOCK]
        kzg_proofs: List[KZGProof, MAX_BLOB_COMMITMENTS_PER_BLOCK]
        signed_block_header: SignedBeaconBlockHeader
        kzg_commitments_inclusion_proof: Vector[Bytes32, KZG_COMMITMENTS_INCLUSION_PROOF_DEPTH]
    </spec>

- name: DataColumnsByRootIdentifier
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/networking/libp2p/rpc/DataColumnsByRootIdentifier.java
  spec: |
    <spec container="DataColumnsByRootIdentifier" fork="fulu" hash="f0478456">
    class DataColumnsByRootIdentifier(Container):
        block_root: Root
        columns: List[ColumnIndex, NUMBER_OF_COLUMNS]
    </spec>

- name: Deposit
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/Deposit.java
  spec: |
    <spec container="Deposit" fork="phase0" hash="cc281399">
    class Deposit(Container):
        proof: Vector[Bytes32, DEPOSIT_CONTRACT_TREE_DEPTH + 1]
        data: DepositData
    </spec>

- name: DepositData
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/DepositData.java
  spec: |
    <spec container="DepositData" fork="phase0" hash="44ba3a61">
    class DepositData(Container):
        pubkey: BLSPubkey
        withdrawal_credentials: Bytes32
        amount: Gwei
        signature: BLSSignature
    </spec>

- name: DepositMessage
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/DepositMessage.java
  spec: |
    <spec container="DepositMessage" fork="phase0" hash="d6f4c2ef">
    class DepositMessage(Container):
        pubkey: BLSPubkey
        withdrawal_credentials: Bytes32
        amount: Gwei
    </spec>

- name: DepositRequest
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/execution/versions/electra/DepositRequest.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/execution/versions/electra/DepositRequestSchema.java
  spec: |
    <spec container="DepositRequest" fork="electra" hash="3af9895d">
    class DepositRequest(Container):
        pubkey: BLSPubkey
        withdrawal_credentials: Bytes32
        amount: Gwei
        signature: BLSSignature
        index: uint64
    </spec>

- name: Eth1Data
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blocks/Eth1Data.java
  spec: |
    <spec container="Eth1Data" fork="phase0" hash="1d7be228">
    class Eth1Data(Container):
        deposit_root: Root
        deposit_count: uint64
        block_hash: Hash32
    </spec>

- name: ExecutionPayloadBellatrix
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/execution/versions/bellatrix/ExecutionPayloadBellatrix.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/execution/versions/bellatrix/ExecutionPayloadBuilderBellatrix.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/execution/versions/bellatrix/ExecutionPayloadSchemaBellatrix.java
  spec: |
    <spec container="ExecutionPayload" fork="bellatrix" hash="da4d8580">
    class ExecutionPayload(Container):
        parent_hash: Hash32
        fee_recipient: ExecutionAddress
        state_root: Bytes32
        receipts_root: Bytes32
        logs_bloom: ByteVector[BYTES_PER_LOGS_BLOOM]
        prev_randao: Bytes32
        block_number: uint64
        gas_limit: uint64
        gas_used: uint64
        timestamp: uint64
        extra_data: ByteList[MAX_EXTRA_DATA_BYTES]
        base_fee_per_gas: uint256
        block_hash: Hash32
        transactions: List[Transaction, MAX_TRANSACTIONS_PER_PAYLOAD]
    </spec>

- name: ExecutionPayloadCapella
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/execution/versions/capella/ExecutionPayloadCapella.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/execution/versions/capella/ExecutionPayloadCapellaImpl.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/execution/versions/capella/ExecutionPayloadBuilderCapella.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/execution/versions/capella/ExecutionPayloadSchemaCapella.java
  spec: |
    <spec container="ExecutionPayload" fork="capella" hash="5533cb47">
    class ExecutionPayload(Container):
        parent_hash: Hash32
        fee_recipient: ExecutionAddress
        state_root: Bytes32
        receipts_root: Bytes32
        logs_bloom: ByteVector[BYTES_PER_LOGS_BLOOM]
        prev_randao: Bytes32
        block_number: uint64
        gas_limit: uint64
        gas_used: uint64
        timestamp: uint64
        extra_data: ByteList[MAX_EXTRA_DATA_BYTES]
        base_fee_per_gas: uint256
        block_hash: Hash32
        transactions: List[Transaction, MAX_TRANSACTIONS_PER_PAYLOAD]
        # [New in Capella]
        withdrawals: List[Withdrawal, MAX_WITHDRAWALS_PER_PAYLOAD]
    </spec>

- name: ExecutionPayloadDeneb
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/execution/versions/deneb/ExecutionPayloadDeneb.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/execution/versions/deneb/ExecutionPayloadDenebImpl.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/execution/versions/deneb/ExecutionPayloadBuilderDeneb.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/execution/versions/deneb/ExecutionPayloadSchemaDeneb.java
  spec: |
    <spec container="ExecutionPayload" fork="deneb" hash="974f7cc9">
    class ExecutionPayload(Container):
        parent_hash: Hash32
        fee_recipient: ExecutionAddress
        state_root: Bytes32
        receipts_root: Bytes32
        logs_bloom: ByteVector[BYTES_PER_LOGS_BLOOM]
        prev_randao: Bytes32
        block_number: uint64
        gas_limit: uint64
        gas_used: uint64
        timestamp: uint64
        extra_data: ByteList[MAX_EXTRA_DATA_BYTES]
        base_fee_per_gas: uint256
        block_hash: Hash32
        transactions: List[Transaction, MAX_TRANSACTIONS_PER_PAYLOAD]
        withdrawals: List[Withdrawal, MAX_WITHDRAWALS_PER_PAYLOAD]
        # [New in Deneb:EIP4844]
        blob_gas_used: uint64
        # [New in Deneb:EIP4844]
        excess_blob_gas: uint64
    </spec>

- name: ExecutionPayloadHeaderBellatrix
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/execution/versions/bellatrix/ExecutionPayloadHeaderBellatrix.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/execution/versions/bellatrix/ExecutionPayloadHeaderBuilderBellatrix.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/execution/versions/bellatrix/ExecutionPayloadHeaderSchemaBellatrix.java
  spec: |
    <spec container="ExecutionPayloadHeader" fork="bellatrix" hash="08fc7165">
    class ExecutionPayloadHeader(Container):
        parent_hash: Hash32
        fee_recipient: ExecutionAddress
        state_root: Bytes32
        receipts_root: Bytes32
        logs_bloom: ByteVector[BYTES_PER_LOGS_BLOOM]
        prev_randao: Bytes32
        block_number: uint64
        gas_limit: uint64
        gas_used: uint64
        timestamp: uint64
        extra_data: ByteList[MAX_EXTRA_DATA_BYTES]
        base_fee_per_gas: uint256
        block_hash: Hash32
        transactions_root: Root
    </spec>

- name: ExecutionPayloadHeaderCapella
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/execution/versions/capella/ExecutionPayloadHeaderCapella.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/execution/versions/capella/ExecutionPayloadHeaderCapellaImpl.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/execution/versions/capella/ExecutionPayloadHeaderBuilderCapella.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/execution/versions/capella/ExecutionPayloadHeaderSchemaCapella.java
  spec: |
    <spec container="ExecutionPayloadHeader" fork="capella" hash="5f481de3">
    class ExecutionPayloadHeader(Container):
        parent_hash: Hash32
        fee_recipient: ExecutionAddress
        state_root: Bytes32
        receipts_root: Bytes32
        logs_bloom: ByteVector[BYTES_PER_LOGS_BLOOM]
        prev_randao: Bytes32
        block_number: uint64
        gas_limit: uint64
        gas_used: uint64
        timestamp: uint64
        extra_data: ByteList[MAX_EXTRA_DATA_BYTES]
        base_fee_per_gas: uint256
        block_hash: Hash32
        transactions_root: Root
        # [New in Capella]
        withdrawals_root: Root
    </spec>

- name: ExecutionPayloadHeaderDeneb
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/execution/versions/deneb/ExecutionPayloadHeaderDeneb.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/execution/versions/deneb/ExecutionPayloadHeaderDenebImpl.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/execution/versions/deneb/ExecutionPayloadHeaderBuilderDeneb.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/execution/versions/deneb/ExecutionPayloadHeaderSchemaDeneb.java
  spec: |
    <spec container="ExecutionPayloadHeader" fork="deneb" hash="957fa918">
    class ExecutionPayloadHeader(Container):
        parent_hash: Hash32
        fee_recipient: ExecutionAddress
        state_root: Bytes32
        receipts_root: Bytes32
        logs_bloom: ByteVector[BYTES_PER_LOGS_BLOOM]
        prev_randao: Bytes32
        block_number: uint64
        gas_limit: uint64
        gas_used: uint64
        timestamp: uint64
        extra_data: ByteList[MAX_EXTRA_DATA_BYTES]
        base_fee_per_gas: uint256
        block_hash: Hash32
        transactions_root: Root
        withdrawals_root: Root
        # [New in Deneb:EIP4844]
        blob_gas_used: uint64
        # [New in Deneb:EIP4844]
        excess_blob_gas: uint64
    </spec>

- name: ExecutionRequests
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/execution/versions/electra/ExecutionRequests.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/execution/versions/electra/ExecutionRequestsBuilderElectra.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/execution/versions/electra/ExecutionRequestsSchema.java
  spec: |
    <spec container="ExecutionRequests" fork="electra" hash="048c4a44">
    class ExecutionRequests(Container):
        # [New in Electra:EIP6110]
        deposits: List[DepositRequest, MAX_DEPOSIT_REQUESTS_PER_PAYLOAD]
        # [New in Electra:EIP7002:EIP7251]
        withdrawals: List[WithdrawalRequest, MAX_WITHDRAWAL_REQUESTS_PER_PAYLOAD]
        # [New in Electra:EIP7251]
        consolidations: List[ConsolidationRequest, MAX_CONSOLIDATION_REQUESTS_PER_PAYLOAD]
    </spec>

- name: Fork
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/Fork.java
  spec: |
    <spec container="Fork" fork="phase0" hash="d210b04e">
    class Fork(Container):
        previous_version: Version
        current_version: Version
        epoch: Epoch
    </spec>

- name: ForkData
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/ForkData.java
  spec: |
    <spec container="ForkData" fork="phase0" hash="8ed39352">
    class ForkData(Container):
        current_version: Version
        genesis_validators_root: Root
    </spec>

- name: HistoricalBatch
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/HistoricalBatch.java
  spec: |
    <spec container="HistoricalBatch" fork="phase0" hash="3b677eb3">
    class HistoricalBatch(Container):
        block_roots: Vector[Root, SLOTS_PER_HISTORICAL_ROOT]
        state_roots: Vector[Root, SLOTS_PER_HISTORICAL_ROOT]
    </spec>

- name: HistoricalSummary
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/versions/capella/HistoricalSummary.java
  spec: |
    <spec container="HistoricalSummary" fork="capella" hash="bfff1483">
    class HistoricalSummary(Container):
        block_summary_root: Root
        state_summary_root: Root
    </spec>

- name: IndexedAttestation
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/IndexedAttestation.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/IndexedAttestationSchema.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/schemas/registry/SchemaRegistryBuilder.java#L817-L819
  spec: |
    <spec container="IndexedAttestation" fork="phase0" hash="b321d4c3">
    class IndexedAttestation(Container):
        attesting_indices: List[ValidatorIndex, MAX_VALIDATORS_PER_COMMITTEE]
        data: AttestationData
        signature: BLSSignature
    </spec>

- name: IndexedAttestationElectra
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/IndexedAttestation.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/IndexedAttestationSchema.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/schemas/registry/SchemaRegistryBuilder.java#L821-L823
  spec: |
    <spec container="IndexedAttestation" fork="electra" hash="2f924640">
    class IndexedAttestation(Container):
        # [Modified in Electra:EIP7549]
        attesting_indices: List[ValidatorIndex, MAX_VALIDATORS_PER_COMMITTEE * MAX_COMMITTEES_PER_SLOT]
        data: AttestationData
        signature: BLSSignature
    </spec>

- name: LightClientBootstrap
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/lightclient/LightClientBootstrap.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/lightclient/LightClientBootstrapSchema.java
  spec: |
    <spec container="LightClientBootstrap" fork="altair" hash="e0d2fa88">
    class LightClientBootstrap(Container):
        # Header matching the requested beacon block root
        header: LightClientHeader
        # Current sync committee corresponding to `header.beacon.state_root`
        current_sync_committee: SyncCommittee
        current_sync_committee_branch: CurrentSyncCommitteeBranch
    </spec>

- name: LightClientHeader
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/lightclient/LightClientHeader.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/lightclient/LightClientHeaderSchema.java
  spec: |
    <spec container="LightClientHeader" fork="altair" hash="53de7cd2">
    class LightClientHeader(Container):
        beacon: BeaconBlockHeader
    </spec>

- name: LightClientUpdate
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/lightclient/LightClientUpdate.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/lightclient/LightClientUpdateSchema.java
  spec: |
    <spec container="LightClientUpdate" fork="altair" hash="abbfc36b">
    class LightClientUpdate(Container):
        # Header attested to by the sync committee
        attested_header: LightClientHeader
        # Next sync committee corresponding to `attested_header.beacon.state_root`
        next_sync_committee: SyncCommittee
        next_sync_committee_branch: NextSyncCommitteeBranch
        # Finalized header corresponding to `attested_header.beacon.state_root`
        finalized_header: LightClientHeader
        finality_branch: FinalityBranch
        # Sync committee aggregate signature
        sync_aggregate: SyncAggregate
        # Slot at which the aggregate signature was created (untrusted)
        signature_slot: Slot
    </spec>

- name: MatrixEntry
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blobs/versions/fulu/MatrixEntry.java
  spec: |
    <spec container="MatrixEntry" fork="fulu" hash="0da9cc8e">
    class MatrixEntry(Container):
        cell: Cell
        kzg_proof: KZGProof
        column_index: ColumnIndex
        row_index: RowIndex
    </spec>

- name: PendingAttestation
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/PendingAttestation.java
  spec: |
    <spec container="PendingAttestation" fork="phase0" hash="e0a37cea">
    class PendingAttestation(Container):
        aggregation_bits: Bitlist[MAX_VALIDATORS_PER_COMMITTEE]
        data: AttestationData
        inclusion_delay: Slot
        proposer_index: ValidatorIndex
    </spec>

- name: PendingConsolidation
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/versions/electra/PendingConsolidation.java
  spec: |
    <spec container="PendingConsolidation" fork="electra" hash="6ded98cf">
    class PendingConsolidation(Container):
        source_index: ValidatorIndex
        target_index: ValidatorIndex
    </spec>

- name: PendingDeposit
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/versions/electra/PendingDeposit.java
  spec: |
    <spec container="PendingDeposit" fork="electra" hash="62923226">
    class PendingDeposit(Container):
        pubkey: BLSPubkey
        withdrawal_credentials: Bytes32
        amount: Gwei
        signature: BLSSignature
        slot: Slot
    </spec>

- name: PendingPartialWithdrawal
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/versions/electra/PendingPartialWithdrawal.java
  spec: |
    <spec container="PendingPartialWithdrawal" fork="electra" hash="44f687d1">
    class PendingPartialWithdrawal(Container):
        validator_index: ValidatorIndex
        amount: Gwei
        withdrawable_epoch: Epoch
    </spec>

- name: PowBlock
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/execution/PowBlock.java
  spec: |
    <spec container="PowBlock" fork="bellatrix" hash="c6c8739a">
    class PowBlock(Container):
        block_hash: Hash32
        parent_hash: Hash32
        total_difficulty: uint256
    </spec>

- name: ProposerSlashing
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/ProposerSlashing.java
  spec: |
    <spec container="ProposerSlashing" fork="phase0" hash="2cd89ad8">
    class ProposerSlashing(Container):
        signed_header_1: SignedBeaconBlockHeader
        signed_header_2: SignedBeaconBlockHeader
    </spec>

- name: SignedAggregateAndProof
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/SignedAggregateAndProof.java
  spec: |
    <spec container="SignedAggregateAndProof" fork="phase0" hash="52046edd">
    class SignedAggregateAndProof(Container):
        message: AggregateAndProof
        signature: BLSSignature
    </spec>
    <spec container="SignedAggregateAndProof" fork="electra" hash="7e784e12">
    class SignedAggregateAndProof(Container):
        # [Modified in Electra:EIP7549]
        message: AggregateAndProof
        signature: BLSSignature
    </spec>

- name: SignedBLSToExecutionChange
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/SignedBlsToExecutionChange.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/SignedBlsToExecutionChangeSchema.java
  spec: |
    <spec container="SignedBLSToExecutionChange" fork="capella" hash="09a5e4b9">
    class SignedBLSToExecutionChange(Container):
        message: BLSToExecutionChange
        signature: BLSSignature
    </spec>

- name: SignedBeaconBlock
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blocks/SignedBeaconBlock.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blocks/SignedBeaconBlockSchema.java
  spec: |
    <spec container="SignedBeaconBlock" fork="phase0" hash="627b8629">
    class SignedBeaconBlock(Container):
        message: BeaconBlock
        signature: BLSSignature
    </spec>

- name: SignedBeaconBlockHeader
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blocks/SignedBeaconBlockHeader.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blocks/SignedBeaconBlockHeaderSchema.java
  spec: |
    <spec container="SignedBeaconBlockHeader" fork="phase0" hash="5784d47c">
    class SignedBeaconBlockHeader(Container):
        message: BeaconBlockHeader
        signature: BLSSignature
    </spec>

- name: SignedContributionAndProof
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/versions/altair/SignedContributionAndProof.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/versions/altair/SignedContributionAndProofSchema.java
  spec: |
    <spec container="SignedContributionAndProof" fork="altair" hash="56c7a91a">
    class SignedContributionAndProof(Container):
        message: ContributionAndProof
        signature: BLSSignature
    </spec>

- name: SignedVoluntaryExit
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/SignedVoluntaryExit.java
  spec: |
    <spec container="SignedVoluntaryExit" fork="phase0" hash="89ba48b3">
    class SignedVoluntaryExit(Container):
        message: VoluntaryExit
        signature: BLSSignature
    </spec>

- name: SigningData
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/SigningData.java
  spec: |
    <spec container="SigningData" fork="phase0" hash="c9a66f76">
    class SigningData(Container):
        object_root: Root
        domain: Domain
    </spec>

- name: SingleAttestation
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/SingleAttestation.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/SingleAttestationSchema.java
  spec: |
    <spec container="SingleAttestation" fork="electra" hash="f67f746a">
    class SingleAttestation(Container):
        committee_index: CommitteeIndex
        attester_index: ValidatorIndex
        data: AttestationData
        signature: BLSSignature
    </spec>

- name: SyncAggregate
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blocks/blockbody/versions/altair/SyncAggregate.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/blocks/blockbody/versions/altair/SyncAggregateSchema.java
  spec: |
    <spec container="SyncAggregate" fork="altair" hash="51e247e5">
    class SyncAggregate(Container):
        sync_committee_bits: Bitvector[SYNC_COMMITTEE_SIZE]
        sync_committee_signature: BLSSignature
    </spec>

- name: SyncAggregatorSelectionData
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/versions/altair/SyncAggregatorSelectionData.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/versions/altair/SyncAggregatorSelectionDataSchema.java
  spec: |
    <spec container="SyncAggregatorSelectionData" fork="altair" hash="990a8a7f">
    class SyncAggregatorSelectionData(Container):
        slot: Slot
        subcommittee_index: uint64
    </spec>

- name: SyncCommittee
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/SyncCommittee.java
  spec: |
    <spec container="SyncCommittee" fork="altair" hash="b1d52376">
    class SyncCommittee(Container):
        pubkeys: Vector[BLSPubkey, SYNC_COMMITTEE_SIZE]
        aggregate_pubkey: BLSPubkey
    </spec>

- name: SyncCommitteeContribution
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/versions/altair/SyncCommitteeContribution.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/versions/altair/SyncCommitteeContributionSchema.java
  spec: |
    <spec container="SyncCommitteeContribution" fork="altair" hash="9f9b0125">
    class SyncCommitteeContribution(Container):
        slot: Slot
        beacon_block_root: Root
        subcommittee_index: uint64
        aggregation_bits: Bitvector[SYNC_COMMITTEE_SIZE // SYNC_COMMITTEE_SUBNET_COUNT]
        signature: BLSSignature
    </spec>

- name: SyncCommitteeMessage
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/versions/altair/SyncCommitteeMessage.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/versions/altair/SyncCommitteeMessageSchema.java
  spec: |
    <spec container="SyncCommitteeMessage" fork="altair" hash="0764ce67">
    class SyncCommitteeMessage(Container):
        slot: Slot
        beacon_block_root: Root
        validator_index: ValidatorIndex
        signature: BLSSignature
    </spec>

- name: Validator
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/state/Validator.java
  spec: |
    <spec container="Validator" fork="phase0" hash="54f88c17">
    class Validator(Container):
        pubkey: BLSPubkey
        withdrawal_credentials: Bytes32
        effective_balance: Gwei
        slashed: boolean
        activation_eligibility_epoch: Epoch
        activation_epoch: Epoch
        exit_epoch: Epoch
        withdrawable_epoch: Epoch
    </spec>

- name: VoluntaryExit
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/operations/VoluntaryExit.java
  spec: |
    <spec container="VoluntaryExit" fork="phase0" hash="aa780f75">
    class VoluntaryExit(Container):
        epoch: Epoch
        validator_index: ValidatorIndex
    </spec>

- name: Withdrawal
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/execution/versions/capella/Withdrawal.java
  spec: |
    <spec container="Withdrawal" fork="capella" hash="ba17e57d">
    class Withdrawal(Container):
        index: WithdrawalIndex
        validator_index: ValidatorIndex
        address: ExecutionAddress
        amount: Gwei
    </spec>

- name: WithdrawalRequest
  sources:
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/execution/versions/electra/WithdrawalRequest.java
    - file: ethereum/spec/src/main/java/tech/pegasys/teku/spec/datastructures/execution/versions/electra/WithdrawalRequestSchema.java
  spec: |
    <spec container="WithdrawalRequest" fork="electra" hash="05b4d2de">
    class WithdrawalRequest(Container):
        source_address: ExecutionAddress
        validator_pubkey: BLSPubkey
        amount: Gwei
    </spec>
