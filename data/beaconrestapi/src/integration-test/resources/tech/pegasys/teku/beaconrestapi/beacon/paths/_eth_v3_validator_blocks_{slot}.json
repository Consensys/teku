{
  "get" : {
    "tags" : [ "Validator", "Validator Required Api" ],
    "operationId" : "produceBlockV3",
    "summary" : "Produce a new block, without signature",
    "description" : "Requests a beacon node to produce a valid block, which can then be signed by a validator. The\nreturned block may be blinded or unblinded, depending on the current state of the network as\ndecided by the execution and beacon nodes.\nThe beacon node must return an unblinded block if it obtains the execution payload from its\npaired execution node. It must only return a blinded block if it obtains the execution payload\nheader from an MEV relay.\nMetadata in the response indicates the type of block produced, and the supported types of block\nwill be added to as forks progress.",
    "parameters" : [ {
      "name" : "slot",
      "required" : true,
      "in" : "path",
      "schema" : {
        "type" : "string",
        "description" : "The slot for which the block should be proposed.",
        "example" : "1",
        "format" : "uint64"
      }
    }, {
      "name" : "randao_reveal",
      "required" : true,
      "in" : "query",
      "schema" : {
        "type" : "string",
        "description" : "`BLSSignature Hex` BLS12-381 signature for the current epoch.",
        "example" : "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505",
        "format" : "byte"
      }
    }, {
      "name" : "graffiti",
      "in" : "query",
      "schema" : {
        "type" : "string",
        "description" : "`Bytes32 Hex` Graffiti.",
        "example" : "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
        "format" : "byte"
      }
    }, {
      "name" : "skip_randao_verification",
      "in" : "query",
      "schema" : {
        "type" : "boolean",
        "description" : "Skip verification of the `randao_reveal` value. If this flag is set then the\n `randao_reveal` must be set to the point at infinity (`0xc0..00`). This query parameter\n  is a flag and does not take a value"
      }
    } ],
    "responses" : {
      "200" : {
        "description" : "Request successful",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ProduceBlockV3Response"
            }
          },
          "application/octet-stream" : {
            "schema" : {
              "type" : "string",
              "format" : "binary"
            }
          }
        }
      },
      "400" : {
        "description" : "The request could not be processed, check the response for more information.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "500" : {
        "description" : "Internal server error",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      }
    }
  }
}