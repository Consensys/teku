{
  "post" : {
    "tags" : [ "Beacon", "Validator Required Api" ],
    "operationId" : "publishBlindedBlock",
    "summary" : "Publish a signed blinded block",
    "description" : "Instructs the beacon node to use the components of the `SignedBlindedBeaconBlock` to construct and publish a `SignedBeaconBlock` by swapping out the `transactions_root` for the corresponding full list of `transactions`. The beacon node should broadcast a newly constructed `SignedBeaconBlock` to the beacon network, to be included in the beacon chain. The beacon node is not required to validate the signed `BeaconBlock`, and a successful response (20X) only indicates that the broadcast has been successful. The beacon node is expected to integrate the new block into its state, and therefore validate the block internally, however blocks which fail the validation are still broadcast but a different status code is returned (202). Pre-Bellatrix, this endpoint will accept a `SignedBeaconBlock`.",
    "deprecated" : true,
    "parameters" : [ {
      "name" : "Eth-Consensus-Version",
      "in" : "header",
      "schema" : {
        "type" : "string",
        "enum" : [ "phase0", "altair", "bellatrix", "capella", "deneb", "electra" ],
        "description" : "Version of the block being submitted, if using SSZ encoding."
      }
    } ],
    "requestBody" : {
      "content" : {
        "application/octet-stream" : {
          "schema" : {
            "type" : "string",
            "format" : "binary"
          }
        },
        "application/json" : {
          "schema" : {
            "title" : "SignedBlindedBlock",
            "type" : "object",
            "oneOf" : [ {
              "$ref" : "#/components/schemas/SignedBeaconBlockPhase0"
            }, {
              "$ref" : "#/components/schemas/SignedBeaconBlockAltair"
            }, {
              "$ref" : "#/components/schemas/SignedBlindedBlockBellatrix"
            }, {
              "$ref" : "#/components/schemas/SignedBlindedBlockCapella"
            }, {
              "$ref" : "#/components/schemas/SignedBlindedBlockDeneb"
            }, {
              "$ref" : "#/components/schemas/SignedBlindedBlockElectra"
            } ]
          }
        }
      }
    },
    "responses" : {
      "415" : {
        "description" : "Unsupported media-type supplied",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "200" : {
        "description" : "Block has been successfully broadcast, validated and imported.",
        "content" : { }
      },
      "202" : {
        "description" : "Block has been successfully broadcast, but failed validation and has not been imported.",
        "content" : { }
      },
      "400" : {
        "description" : "Unable to parse request body.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "503" : {
        "description" : "Beacon node is currently syncing.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "204" : {
        "description" : "Data is unavailable because the chain has not yet reached genesis",
        "content" : { }
      },
      "500" : {
        "description" : "Internal server error",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      }
    }
  }
}