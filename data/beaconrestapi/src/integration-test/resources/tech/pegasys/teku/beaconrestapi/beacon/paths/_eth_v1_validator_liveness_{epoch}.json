{
  "post" : {
    "tags" : [ "Validator" ],
    "operationId" : "postValidatorLiveness",
    "summary" : "Get Validator Liveness",
    "description" : "Requests the beacon node to indicate if a validator has been observed to be live in a given epoch. The beacon node might detect liveness by observing messages from the validator on the network, in the beacon chain, from its API or from any other source. It is important to note that the values returned by the beacon node are not canonical; they are best-effort and based upon a subjective view of the network.",
    "parameters" : [ {
      "name" : "epoch",
      "required" : true,
      "in" : "path",
      "schema" : {
        "type" : "string",
        "description" : "`uint64` Epoch number to query.",
        "example" : "1",
        "format" : "uint64"
      }
    } ],
    "requestBody" : {
      "content" : {
        "application/json" : {
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "unsigned 64 bit integer",
              "example" : "1",
              "format" : "uint64"
            }
          }
        }
      }
    },
    "responses" : {
      "200" : {
        "description" : "Successful Response",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/PostValidatorLivenessResponse"
            }
          }
        }
      },
      "503" : {
        "description" : "Beacon node is currently syncing and not serving requests.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "400" : {
        "description" : "The request could not be processed, check the response for more information.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      },
      "500" : {
        "description" : "Internal server error",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HttpErrorResponse"
            }
          }
        }
      }
    }
  }
}